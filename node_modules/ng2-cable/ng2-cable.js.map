{"version":3,"file":"ng2-cable.js","sourceRoot":"","sources":["../src/ng2-cable.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,KAAK,WAAW,MAAM,aAAa;OACnC,EAAE,WAAW,EAAE,MAAM,eAAe;AAG3C;IAKE,kBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAFrC,gBAAW,GAAG,WAAW,CAAC;IAGjC,CAAC;IAED,4BAAS,GAAT,UAAU,GAAU,EAAE,OAAc,EAAE,MAAS;QAA/C,iBAQC;QARqC,sBAAS,GAAT,WAAS;QAC7C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACnB,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,kBAAkB,EAAE;YACtE,QAAQ,EAAE,UAAC,IAAQ;gBACjB,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;YAC7D,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,2BAAQ,GAAR,UAAS,GAAU;QACjB,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,8BAAW,GAAX;QACE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACrD,CAAC;IACI,mBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,uBAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;KACpB,EAF6F,CAE7F,CAAC;IACF,eAAC;AAAD,CAAC,AAhCD,IAgCC","sourcesContent":["import { Injectable } from '@angular/core'\nimport * as ActionCable from 'actioncable';\nimport { Broadcaster } from './broadcaster';\n\n\nexport class Ng2Cable {\n  public cable: any;\n  public subscription: any;\n  public actionCable = ActionCable;\n\n  constructor(private broadcaster: Broadcaster) {\n  }\n\n  subscribe(url:string, channel:string, params={}) {\n    this.setCable(url);\n    let subscriptionParams = Object.assign({ channel: channel }, params);\n    this.subscription = this.cable.subscriptions.create(subscriptionParams, {\n      received: (data:any) => {\n        this.broadcaster.broadcast((data.action || channel), data);\n      }\n    });\n  }\n\n  setCable(url:string): void {\n    this.cable = ActionCable.createConsumer(url);\n  }\n\n  unsubscribe() {\n    this.cable.subscriptions.remove(this.subscription);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Broadcaster, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}