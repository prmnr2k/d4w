import { HttpClient } from '@angular/common/http';
import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';
import { Subscription } from 'rxjs/Subscription';
import { Observable } from 'rxjs/Observable';
export declare class NgxTypeAheadComponent implements OnInit, OnDestroy {
    private element;
    private viewContainer;
    private http;
    private cdr;
    showSuggestions: boolean;
    results: string[];
    taItemTpl: TemplateRef<any>;
    taUrl: string;
    taParams: {};
    taQueryParam: string;
    taCallbackParamValue: any;
    taApi: string;
    taApiMethod: string;
    taResponseTransform: () => void;
    taList: never[];
    taSelected: EventEmitter<string>;
    suggestionsTplRef: TemplateRef<any>;
    private suggestionIndex;
    private subscriptions;
    private activeResult;
    constructor(element: ElementRef, viewContainer: ViewContainerRef, http: HttpClient, cdr: ChangeDetectorRef);
    handleEsc(event: KeyboardEvent): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    renderTemplate(): void;
    onElementKeyDown(): Observable<{}>;
    filterEnterEvent(elementObs: Observable<{}>): Subscription;
    listenAndSuggest(): Subscription;
    navigateWithArrows(elementObs: Observable<{}>): Subscription;
    suggest(query: string): any;
    /**
     * peforms a jsonp/http request to search with query and params
     * @param query the query to search from the remote source
     */
    request(query: string): any;
    requestHttp(url: string, options: any): any;
    requestJsonp(url: any, options: any, callback?: string): Observable<string[]>;
    markIsActive(index: number, result: string): boolean;
    handleSelectSuggestion(suggestion: string): void;
    hideSuggestions(): void;
    hasItemTemplate(): boolean;
    createListSource(list: any[]): Observable<string[]>;
}
